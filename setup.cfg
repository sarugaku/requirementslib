[metadata]
name = requirementslib
description = A tool for converting between pip-style and pipfile requirements.
url = https://github.com/sarugaku/requirementslib
author = Dan Ryan
author_email = dan@danryan.co
maintainer = Frost Ming
maintainer_email = mianghong@gmail.com
long_description = file: README.rst
long_description_content_type = text/x-rst
license = MIT
license_file = LICENSE
keywords =
    pipfile
    requirements.txt
    pip
    requirementslib
    pipenv
    lockfile
    dependency resolver
    resolver
    dependencies
classifier =
    Development Status :: 5 - Production/Stable
    Intended Audience :: Developers
    License :: OSI Approved :: MIT License
    Programming Language :: Python
    Programming Language :: Python :: 3
    Programming Language :: Python :: 3.7
    Programming Language :: Python :: 3.8
    Programming Language :: Python :: 3.9
    Programming Language :: Python :: 3.10
    Programming Language :: Python :: 3.11
    Programming Language :: Python :: Implementation :: CPython
    Programming Language :: Python :: Implementation :: PyPy
    Topic :: Software Development :: Build Tools
    Topic :: Software Development :: Libraries :: Python Modules
    Topic :: Utilities

[options]
zip_safe = true
python_requires = >=3.7
install_requires =
    attrs>=19.2
    distlib>=0.2.8
    pep517>=0.5.0
    pip>=22.2
    platformdirs
    plette[validation]
    requests
    setuptools>=40.8
    tomlkit>=0.5.3

[options.extras_require]
tests =
    pytest
    readme-renderer[md]
    pytest-xdist
    pytest-cov
    pytest-timeout
    coverage
    hypothesis
docs =
    sphinx
    sphinx_rtd_theme
dev =
    nox
    twine
    parver
    towncrier

[bdist_wheel]
universal = 1

[tool:pytest]
addopts = -ra --timeout 300
testpaths = tests/
norecursedirs = .* build dist news tasks docs tests/artifacts
filterwarnings =
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning
markers =
    editable
    utils
    requirements
    needs_internet
    to_line
    serial

[flake8]
max-line-length = 90
select = C,E,F,W,B,B950
#select = E,W,F
ignore =
    # The default ignore list:
    D203,F401,E123,E203,W503,E501,E402,E731,C901,B950
    #E121,E123,E126,E226,E24,E704,
    # Our additions:
    # E123: closing bracket does not match indentation of opening bracketâ€™s line
    # E203: whitespace before ':'
    # E129: visually indented line with same indent as next logical line
    # E222: multiple spaces after operator
    # E231: missing whitespace after ','
    # D203: 1 blank line required before class docstring
    # E402: module level import not at top of file
    # E501: line too long (using B950 from flake8-bugbear)
    # F401: Module imported but unused
    # W503: line break before binary operator (not a pep8 issue, should be ignored)
exclude =
    .tox,
    .git,
    __pycache__,
    docs/source/*,
    build,
    dist,
    tests/*,
    *.pyc,
    *.egg-info,
    .cache,
    .eggs,
    setup.py,
max-complexity=13

[pytype]
# Space-separated list of files or directories to exclude.
exclude =
    **/*_test.py
    **/test_*.py
    tests/
    tasks/
    news/
    docs/
    build/
    dist/
    .vscode/
    **/__pycache__
    .eggs/
    src/*.egg-info
    src/*.dist-info
# Space-separated list of files or directories to process.
inputs =
    ./src/requirementslib
# All pytype output goes here.
output = .typeshed
# Paths to source code directories, separated by ':'.
pythonpath =
    ./src/requirementslib:
# Python version (major.minor) of the target code.
python_version = 3.7
# Comma separated list of error names to ignore.
disable =
    pyi-error
# Don't report errors.
report_errors = False
# Experimental: solve unknown types to label with structural types.
protocols = True
# Experimental: Only load submodules that are explicitly imported.
strict_import = True

[build-system]
requires = ["setuptools>=40.8.0", "wheel>=0.33.0"]

[mypy]
ignore_missing_imports=true
follow_imports=skip
html_report=mypyhtml
show_error_context=true
