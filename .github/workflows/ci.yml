name: Requirementslib CI

on:
  push:
    paths-ignore:
      - "docs/**"
      - "news/**"
      - "*.ini"
      - "*.md"
      - "**/*.txt"
      - "*.rst"
      - ".gitignore"
      - ".gitmodules"
      - ".gitattributes"
      - ".editorconfig"
    branches:
      - master
  pull_request:
    paths-ignore:
      - "docs/**"
      - "news/**"
      - "*.ini"
      - "*.md"
      - "**/*.txt"
      - "*.rst"
      - ".gitignore"
      - ".gitmodules"
      - ".gitattributes"
      - ".editorconfig"

jobs:
  test:
    name: ${{matrix.os}} / ${{ matrix.python-version }}
    runs-on: ${{ matrix.os }}-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: [2.7, 3.5, 3.6, 3.7, 3.8]
        os: [MacOS, Ubuntu, Windows]

    steps:
      - uses: actions/checkout@v1

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}

      - name: Get python path
        id: python-path
        run: |
          echo ::set-output name=path::$(python -c "import sys; print(sys.executable)")

      - name: Install latest pip, setuptools, wheel
        run: |
          python -m pip install --upgrade coveralls pip setuptools wheel --upgrade-strategy=eager
          python -m pip install --upgrade --pre pipenv

      - name: Run tests
        env:
          PIPENV_DEFAULT_PYTHON_VERSION: ${{ matrix.python-version }}
          PYTHONWARNINGS: ignore:DEPRECATION
          COVERALLS_REPO_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          COVERALLS_GIT_COMMIT: ${{ github.sha }}
          COVERALLS_GIT_BRANCH: ${{ github.ref }}
          COVERALLS_FLAG_NAME: ${{ matrix.os }}-${{ matrix.python-version }}
          COVERALLS_SERVICE_NAME: github
          COVERALLS_SERVICE_JOB_ID: ${{ github.run_id }}
          COVERALLS_PARALLEL: true
          PIPENV_NOSPIN: "1"
          CI: "1"
        run: |
          git submodule sync
          git submodule update --init --recursive
          python -m pipenv install --dev --python=${{ steps.python-path.outputs.path }}
          pipenv run coverage run -p -m pytest -ra tests/
          pipenv run coverage combine
          coveralls
