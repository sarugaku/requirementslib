name: Requirementslib CI

on:
  push:
    paths-ignore:
      - "docs/**"
      - "news/**"
      - "*.ini"
      - "*.md"
      - "**/*.txt"
      - "*.rst"
      - ".gitignore"
      - ".gitmodules"
      - ".gitattributes"
      - ".editorconfig"
    branches:
      - master
  pull_request:
    paths-ignore:
      - "docs/**"
      - "news/**"
      - "*.ini"
      - "*.md"
      - "**/*.txt"
      - "*.rst"
      - ".gitignore"
      - ".gitmodules"
      - ".gitattributes"
      - ".editorconfig"

jobs:
  pre-commit:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
      - uses: pre-commit/action@v2.0.3
  test:
    name: ${{matrix.os}} / ${{ matrix.python-version }}
    runs-on: ${{ matrix.os }}-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: [3.7, 3.8, 3.9, "3.10"]
        os: [macos, ubuntu, windows]

    steps:
      - uses: actions/checkout@v2

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Get pip cache dir
        id: pip-cache
        run: |
          echo "::set-output name=dir::$(pip cache dir)"

      - name: pip cache
        uses: actions/cache@v2
        with:
          path: ${{ steps.pip-cache.outputs.dir }}
          key: ${{ runner.os }}-pip-${{ hashFiles('setup.cfg') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install Dev Dependencies
        run: python -m pip install --upgrade .[dev]

      - name: Run tests
        env:
          PIPENV_DEFAULT_PYTHON_VERSION: ${{ matrix.python-version }}
          PYTHONWARNINGS: ignore:DEPRECATION
          COVERALLS_REPO_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          COVERALLS_GIT_COMMIT: ${{ github.sha }}
          COVERALLS_GIT_BRANCH: ${{ github.ref }}
          COVERALLS_FLAG_NAME: ${{ matrix.os }}-${{ matrix.python-version }}
          COVERALLS_SERVICE_NAME: github
          COVERALLS_SERVICE_JOB_ID: ${{ github.run_id }}
          COVERALLS_PARALLEL: true
          CI: "1"
        run: |
          git submodule sync
          git submodule update --init --recursive
          nox -s coverage
